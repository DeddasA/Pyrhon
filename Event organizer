
guests = {}

def read_guestlist(file_name):
    with open(file_name, 'r') as text_file:
        for line in text_file:
            line_data = line.strip().split(",")
            yield line_data

def fixer(func):
    for line_data in func:
        name = line_data[0]
        age = int(line_data[1])
        guests[f'Customer: {name}'] = f'Age: {age}'
        new_name = yield name + ' ' + str(age)
        if new_name is not None:
          guests[new_name[0]] =new_name[1]

generator = read_guestlist('guest_list.txt')
generator_1 = fixer(generator)
next(generator_1)

generator_1.send(('Jane',35))
for g in generator_1:
    pass

def checker(dct):
    for name, age in dct.items():
        if age >= 21:
            yield name
generator_2 = checker(guests)
# for g in generator_2:
#     print(g)

def assign_all(guests, start_food=None):
    for name, age in guests.items():
        guests[name] = [age, start_food]
    while True:
        for name, food in guests.items():
            new_food = yield name, food  
            if new_food is not None:
                guests[name][1] = new_food
        for name, table in guests.items():
            new_table = yield name, table  
            if new_table is not None:
                guests[name][1] =  new_table
            
        for name, seat in guests.items():
            new_seat = yield name, seat  
            if new_seat is not None:
                guests[name][1] =  seat
                yield name
              

       
zero = 0           
        
generator_all = assign_all(guests)
for i, (name,food) in enumerate(generator_all):
        new_food = input(f'what does {name} want?' )
        new_table = input(f'what table does {name} want?' )
        new_seat = input(f'what seat does {name} want?' )
        sent_items = f'Food: {new_food}',f'Table: {new_table}',f'Chair:{new_seat}'
        generator_all.send(sent_items)
      
        if i == len(guests) - 1:
            break
print(guests)
        
